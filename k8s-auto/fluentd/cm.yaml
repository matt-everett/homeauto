apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-output
data:
  fluentd.conf: |
    # omit other source / match
    <label @FLUENT_LOG>
      <match fluent.*>
        @type stdout
      </match>
    </label>

    # Prevent fluentd from handling records containing its own logs. Otherwise
    # it can lead to an infinite loop, when error in sending one message generates
    # another message which also fails to be sent and so on.
    #<match fluentd.**>
    #  @type null
    #</match>

    # Used for health checking
    <source>
      @type http
      port 9880
      bind 0.0.0.0
    </source>

    # Emits internal metrics to every minute, and also exposes them on port
    # 24220. Useful for determining if an output plugin is retryring/erroring,
    # or determining the buffer queue length.
    <source>
      @type monitor_agent
      bind 0.0.0.0
      port 24220
      tag fluentd.monitor.metrics
    </source>

    <system>
      root_dir /tmp/fluentd-buffers/
    </system>

    <source>
      @type forward
      port 24224
      bind 0.0.0.0
    </source>

    <source>
      @type rabbitmq
      tag homeauto.pool
      host rabbitmq
      # or hosts ["192.168.1.1", "192.168.1.2"]
      user homeauto
      pass {{password}}
      vhost /homeauto
      exchange amq.topic # not required. if specified, the queue will be bound to the exchange
      queue pool
      routing_key home.pool # if not specified, the tag is used
      ttl 30000
      heartbeat 10 # integer as seconds or :server (interval specified by server)
      <parse>
        @type json # or msgpack, ltsv, none
      </parse>
      <buffer> # to use in buffered mode
      </buffer>
    </source>

    <match homeauto.**>
      @type elasticsearch
      include_tag_key true
      host eck-es-http
      port 9200
      scheme https
      ssl_verify false
      ssl_version TLSv1_2
      user homeauto
      password {{password}}
      logstash_format true
      <buffer>
        @type file
        path /opt/bitnami/fluentd/logs/buffers/logs.buffer
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever
        retry_max_interval 30
        chunk_limit_size 2M
        queue_limit_length 8
        overflow_action block
      </buffer>
    </match>
